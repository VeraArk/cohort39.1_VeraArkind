import java.util.Stack;

public class Bracket {
    /*  Проверка правильности скобочной последовательности
Описание
Разработайте программу на Java для проверки правильности скобочной последовательности. Правильная скобочная последовательность должна удовлетворять следующим критериям:

Каждой открывающей скобке ((, [, {) должна соответствовать закрывающая скобка того же типа (), ], }).
Закрывающая скобка должна следовать после своей открывающей пары.
Скобки должны быть правильно вложены друг в друга.
Примеры
Вход: ( [ ] { } ) Вывод: true
Вход: [(]) Вывод: false
Вход: {[( )]} Вывод: true
Вход: {[} Вывод: false
Реализация
Используйте стек для отслеживания открывающих скобок. При обходе строки, помещайте в стек все открывающие скобки.
При встрече закрывающей скобки проверьте, соответствует ли она верхнему элементу стека (последней открывающей скобке). Если соответствует, извлеките элемент из стека. В противном случае, последовательность скобок неверная.
После обработки всей строки, если стек пуст, последовательность верная. Если в стеке остались элементы, последовательность неверная.
     */
    public static boolean checkOrder(String st) {
        boolean lokal = true;
        Stack<Character> brackets = new Stack<>();
        char[] br = st.toCharArray();

        for (int i = 0; i < st.length(); i++) {
            if (br[i] == '[' || br[i] == '{' || br[i] == '(') {
                brackets.push(br[i]);
            } else if (br[i] == ']') {
                if (!(brackets.pop() == '[')) {
                    lokal = false;
                    break;
                }
            } else if (br[i] == '}') {
                if (!(brackets.pop() == '{')) {
                    lokal = false;
                    break;
                }
            } else if (br[i] == ')') {
                if (!(brackets.pop() == '(')) {
                    lokal = false;
                    break;
                }
            }
        }
        if (!brackets.isEmpty()) {
            lokal = false;
        }
        return lokal;
    }

    public static void main(String[] args) {
        String st = "(Hello Welt!})";

        boolean isBracketsOk = checkOrder(st);
        System.out.println(isBracketsOk);
    }
}

